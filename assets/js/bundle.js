
const header=document.getElementById("header");let lastPos=document.documentElement.scrollTop;window.addEventListener("scroll",()=>{const e=document.documentElement.scrollTop;e>lastPos?e>header.offsetHeight&&(header.classList.add("-translate-y-full"),header.classList.remove("header-shadow")):(header.classList.remove("-translate-y-full"),header.classList.add("header-shadow")),lastPos=e},!1);const menu=document.getElementById("menu"),searchBox=document.getElementById("search"),menuToggle=document.getElementById("menu-toggle");menuToggle.addEventListener("click",()=>{menu.classList.toggle("hidden"),searchBox.classList.toggle("hidden")},!1);class SearchPosts{async init(){const e=new URL(location.href).searchParams;this.start=Number(e.get("start"))||1,this.size=Number(e.get("size"))||12,this.posts=await fetch("../index.json").then(e=>e.json()),this.render(e.get("q"))}render(e){const t=document.getElementById("wrapper"),s=document.getElementById("searchbox"),n=document.getElementById("info");if(e="string"==typeof e?e.toLowerCase():"",history.replaceState(null,null,`?q=${e}&start=${this.start}&size=${this.size}`),s.value=e,t.innerHTML="",""===e)return void(n.innerHTML='<p>Enter keywords in the search box above<br>You can use space-separated search qualifiers using the following syntax : <code>field;value</code>.<br>Examples:<br>hashomerowmods;false stagger;columnar g heavy<br>ifo keyboard;ergodash<br>the rootiest<p><br>See the "Tag List" for a list of the available fields');const o=this.posts.filter(t=>{const s=t.title.toLowerCase(),n=e.split(" ").map(e=>e.split(";"));console.log(n);const o=n.filter(e=>2==e.length);console.log("searchFilters is : "+o);const r=n.filter(e=>1==e.length).join(" ");console.log("titleSearch is : "+r);const a=o.map(e=>t[e[0]]==e[1]);return console.log(t.keyboard+" "+typeof t.keyboard),(""==r||-1!==s.indexOf(r))&&a.every(Boolean)});if(0===o.length)return void(n.textContent=`No results were found for "${e}"`);const r=this.size,a=this.start-1,l=o.slice(a,a+r),i=a+l.length,d=this.start<i||1!==this.start?`${this.start} to ${i}`:this.start,c=o.length>1?"s":"";n.textContent=`Showing ${d} of ${o.length} result${c} found for "${e}"`,l.forEach(e=>{const{url:s,title:n,date:o}=e,r=Boolean(e.split)?"split":"non-split";t.innerHTML+=`\n        <div class="w-full sm:w-1/2 md:w-1/3 self-stretch p-2 mb-2">\n          <a href="${s}">\n            <div class="rounded shadow-md h-full px-6 py-5">\n              <div class="font-semibold text-lg mb-2">${n}</div>\n              <p class="text-gray-700 mb-1">${e.stagger} stagger, ${e.keycount} keys, ${r}</p>\n            </div>\n          </a>\n        </div>\n      `})}}if("/search/"===location.pathname){const e=document.getElementById("searchbox"),t=new SearchPosts;t.init(),e.addEventListener("keyup",debounce((function(){t.render(this.value)}),400))}function debounce(e,t){let s,n=[];return function(...o){return new Promise(r=>{clearTimeout(s),s=setTimeout(()=>{s=null;const t=e.apply(this,o);for(r of n)r(t);n=[]},t),n.push(r)})}}